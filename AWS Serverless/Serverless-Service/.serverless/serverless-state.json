{
  "service": {
    "service": "serverless-service-new",
    "serviceObject": {
      "name": "serverless-service-new"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "profile": "Admin",
      "region": "us-east-1",
      "stage": "dev",
      "environment": {
        "IMAGE_METADATA_TABLE_NAME": "images-metadata",
        "SECRET_KEY": "mySuperSecret!"
      },
      "apiKeys": [
        "learning-serverless-api-keys"
      ],
      "usagePlan": {
        "quota": {
          "limit": 10,
          "offset": 0,
          "period": "DAY"
        },
        "throttle": {
          "burstLimit": 10,
          "rateLimit": 10
        }
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s2:ListBucket",
            "s3:GetObject",
            "s3:PutObject"
          ],
          "Resource": "arn:aws:s3:::chiru-serverless-service-learning-008/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "states:ListStateMachines",
            "states:StartExecution"
          ],
          "Resource": "arn:aws:states:*:*:*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/images-metadata"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ResizeImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-resizeImage"
            }
          },
          "ExecuteStepFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-executeStepFunction"
            }
          },
          "ThumbnailsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-thumbnails"
            }
          },
          "SaveImageMetaDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-saveImageMetaData"
            }
          },
          "SquareImageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-squareImage"
            }
          },
          "GetImageMetaDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-getImageMetaData"
            }
          },
          "GenerateTokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-generateToken"
            }
          },
          "AuthorizeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-service-new-dev-authorize"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-service-new",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-service-new-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-service-new-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-service-new",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ResizeImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.resizeImage",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-resizeImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ResizeImageLogGroup"
            ]
          },
          "ExecuteStepFunctionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.executeStepFunction",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-executeStepFunction",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ExecuteStepFunctionLogGroup"
            ]
          },
          "ThumbnailsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.thumbnails",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-thumbnails",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ThumbnailsLogGroup"
            ]
          },
          "SaveImageMetaDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.saveImageMetaData",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-saveImageMetaData",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SaveImageMetaDataLogGroup"
            ]
          },
          "SquareImageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.squareImage",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-squareImage",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SquareImageLogGroup"
            ]
          },
          "GetImageMetaDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "handler.getImageMetaData",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-getImageMetaData",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetImageMetaDataLogGroup"
            ]
          },
          "GenerateTokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "authorizationHandler.generateToken",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-generateToken",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GenerateTokenLogGroup"
            ]
          },
          "AuthorizeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z/serverless-service-new.zip"
              },
              "Handler": "authorizationHandler.authorize",
              "Runtime": "nodejs12.x",
              "FunctionName": "serverless-service-new-dev-authorize",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "IMAGE_METADATA_TABLE_NAME": "images-metadata",
                  "SECRET_KEY": "mySuperSecret!"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AuthorizeLogGroup"
            ]
          },
          "ResizeImageLambdaVersion205O4UUCnxBU4F37QknlcOtmIWVSADNagpilTSAk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResizeImageLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "ExecuteStepFunctionLambdaVersionjOvTKjhziSaqmKptqaHZ8RWcBcY3HDdVhqDHvozQeHI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ExecuteStepFunctionLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "ThumbnailsLambdaVersionSb8zj7F5VE5O06sMajn1CULRyDsTvcTuRD26K7Ho6U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ThumbnailsLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "SaveImageMetaDataLambdaVersionZPfjafnIGlvhSQtPjc1oi4ifw1mFY0a8ky7czJV9s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SaveImageMetaDataLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "SquareImageLambdaVersionHjJLiJKqQyc14fd9Agza9ptRjyF6U8HOMk3BdqpRw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SquareImageLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "GetImageMetaDataLambdaVersionDZAE0cKxGy86Az8C9ZnwrNTZeSOa6UKLp1KRDH0qIY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetImageMetaDataLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "GenerateTokenLambdaVersionpM6f3ml9YGN5zem3GLh1KByvWRG5BegAryUrowywU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GenerateTokenLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "AuthorizeLambdaVersion63fuK7jDqidrT0VcjxatFRFYhygb4FKQo6jIXsGkc1c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AuthorizeLambdaFunction"
              },
              "CodeSha256": "LeuBB8obgMQnoW1NTki/HwWJI5/uqc1gQ3dwYSCPOfM="
            }
          },
          "ImageProcessingMachineStepFunctionsStateMachineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "states.us-east-1.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "dev-us-east-1-serverless-service-new-statemachine",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "lambda:InvokeFunction"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-resizeImage"
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-resizeImage"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-saveImageMetaData"
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-saveImageMetaData"
                                }
                              }
                            ]
                          },
                          {
                            "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-squareImage"
                          },
                          {
                            "Fn::Sub": [
                              "${functionArn}:*",
                              {
                                "functionArn": {
                                  "Fn::Sub": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-squareImage"
                                }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ImageProcessingMachineStepFunctionsStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
              "DefinitionString": {
                "Fn::Sub": "{\n  \"Comment\": \"image processing state machine\",\n  \"StartAt\": \"Parallel\",\n  \"States\": {\n    \"Parallel\": {\n      \"Type\": \"Parallel\",\n      \"Next\": \"FinalState\",\n      \"Branches\": [\n        {\n          \"StartAt\": \"ResizeImage\",\n          \"States\": {\n            \"ResizeImage\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-resizeImage\",\n              \"End\": true\n            }\n          }\n        },\n        {\n          \"StartAt\": \"SaveImageMetaData\",\n          \"States\": {\n            \"SaveImageMetaData\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-saveImageMetaData\",\n              \"End\": true\n            }\n          }\n        },\n        {\n          \"StartAt\": \"SquareImage\",\n          \"States\": {\n            \"SquareImage\": {\n              \"Type\": \"Task\",\n              \"Resource\": \"arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:serverless-service-new-dev-squareImage\",\n              \"End\": true\n            }\n          }\n        }\n      ]\n    },\n    \"FinalState\": {\n      \"Type\": \"Pass\",\n      \"End\": true\n    }\n  }\n}"
              },
              "RoleArn": {
                "Fn::GetAtt": [
                  "ImageProcessingMachineStepFunctionsStateMachineRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ImageProcessingMachineStepFunctionsStateMachineRole"
            ]
          },
          "S3BucketChiruserverlessservicelearning008": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "chiru-serverless-service-learning-008",
              "NotificationConfiguration": {
                "LambdaConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "ExecuteStepFunctionLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Filter": {
                      "S3Key": {
                        "Rules": [
                          {
                            "Name": "prefix",
                            "Value": "uploads"
                          },
                          {
                            "Name": "suffix",
                            "Value": ".jpg"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Function": {
                      "Fn::GetAtt": [
                        "ThumbnailsLambdaFunction",
                        "Arn"
                      ]
                    },
                    "Filter": {
                      "S3Key": {
                        "Rules": [
                          {
                            "Name": "prefix",
                            "Value": "resized-uploads"
                          },
                          {
                            "Name": "suffix",
                            "Value": ".jpg"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "DependsOn": [
              "ExecuteStepFunctionLambdaPermissionChiruserverlessservicelearning008S3",
              "ThumbnailsLambdaPermissionChiruserverlessservicelearning008S3"
            ]
          },
          "ExecuteStepFunctionLambdaPermissionChiruserverlessservicelearning008S3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ExecuteStepFunctionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::chiru-serverless-service-learning-008"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "ThumbnailsLambdaPermissionChiruserverlessservicelearning008S3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ThumbnailsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "s3.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":s3:::chiru-serverless-service-learning-008"
                  ]
                ]
              },
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              }
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-service-new",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceImage": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "image",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceImageImageidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceImage"
              },
              "PathPart": "{imageId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRegister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "register",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodImageImageidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceImageImageidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "AuthorizeApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetImageMetaDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "AuthorizeApiGatewayAuthorizer"
          },
          "ApiGatewayMethodRegisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRegister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": true,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GenerateTokenLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GenerateTokenLambdaPermissionApiGateway"
            ]
          },
          "AuthorizeApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "authorize",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "AuthorizeLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1635678019600": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodImageImageidVarGet",
              "ApiGatewayMethodRegisterPost"
            ]
          },
          "ApiGatewayApiKey1": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
              "Enabled": true,
              "Name": "learning-serverless-api-keys",
              "StageKeys": [
                {
                  "RestApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "StageName": "dev"
                }
              ]
            },
            "DependsOn": "ApiGatewayDeployment1635678019600"
          },
          "ApiGatewayUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": "ApiGatewayDeployment1635678019600",
            "Properties": {
              "ApiStages": [
                {
                  "ApiId": {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "Stage": "dev"
                }
              ],
              "Description": "Usage plan for serverless-service-new dev stage",
              "UsagePlanName": "serverless-service-new-dev",
              "Quota": {
                "Limit": 10,
                "Offset": 0,
                "Period": "DAY"
              },
              "Throttle": {
                "BurstLimit": 10,
                "RateLimit": 10
              }
            }
          },
          "ApiGatewayUsagePlanKey1": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
              "KeyId": {
                "Ref": "ApiGatewayApiKey1"
              },
              "KeyType": "API_KEY",
              "UsagePlanId": {
                "Ref": "ApiGatewayUsagePlan"
              }
            }
          },
          "GetImageMetaDataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetImageMetaDataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AuthorizeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AuthorizeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GenerateTokenLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GenerateTokenLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ImageTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "ImageId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "ImageId",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "images-metadata"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ServerlessDeploymentBucketName"
            }
          },
          "ResizeImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResizeImageLambdaVersion205O4UUCnxBU4F37QknlcOtmIWVSADNagpilTSAk"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ResizeImageLambdaFunctionQualifiedArn"
            }
          },
          "ExecuteStepFunctionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ExecuteStepFunctionLambdaVersionjOvTKjhziSaqmKptqaHZ8RWcBcY3HDdVhqDHvozQeHI"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ExecuteStepFunctionLambdaFunctionQualifiedArn"
            }
          },
          "ThumbnailsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ThumbnailsLambdaVersionSb8zj7F5VE5O06sMajn1CULRyDsTvcTuRD26K7Ho6U"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ThumbnailsLambdaFunctionQualifiedArn"
            }
          },
          "SaveImageMetaDataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SaveImageMetaDataLambdaVersionZPfjafnIGlvhSQtPjc1oi4ifw1mFY0a8ky7czJV9s"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-SaveImageMetaDataLambdaFunctionQualifiedArn"
            }
          },
          "SquareImageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SquareImageLambdaVersionHjJLiJKqQyc14fd9Agza9ptRjyF6U8HOMk3BdqpRw"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-SquareImageLambdaFunctionQualifiedArn"
            }
          },
          "GetImageMetaDataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetImageMetaDataLambdaVersionDZAE0cKxGy86Az8C9ZnwrNTZeSOa6UKLp1KRDH0qIY"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-GetImageMetaDataLambdaFunctionQualifiedArn"
            }
          },
          "GenerateTokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GenerateTokenLambdaVersionpM6f3ml9YGN5zem3GLh1KByvWRG5BegAryUrowywU"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-GenerateTokenLambdaFunctionQualifiedArn"
            }
          },
          "AuthorizeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AuthorizeLambdaVersion63fuK7jDqidrT0VcjxatFRFYhygb4FKQo6jIXsGkc1c"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-AuthorizeLambdaFunctionQualifiedArn"
            }
          },
          "ImageProcessingMachineStepFunctionsStateMachineArn": {
            "Description": "Current StateMachine Arn",
            "Value": {
              "Ref": "ImageProcessingMachineStepFunctionsStateMachine"
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ImageProcessingMachineStepFunctionsStateMachineArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-service-new-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "settings": {
        "IMAGE_METADATA_TABLE_NAME": "images-metadata",
        "SECRET_KEY": "mySuperSecret!"
      }
    },
    "plugins": [
      "serverless-step-functions",
      "serverless-pseudo-parameters"
    ],
    "pluginsData": {},
    "functions": {
      "resizeImage": {
        "handler": "handler.resizeImage",
        "events": [],
        "name": "serverless-service-new-dev-resizeImage",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ResizeImageLambdaVersion205O4UUCnxBU4F37QknlcOtmIWVSADNagpilTSAk"
      },
      "executeStepFunction": {
        "handler": "handler.executeStepFunction",
        "events": [
          {
            "s3": {
              "bucket": "chiru-serverless-service-learning-008",
              "event": "s3:ObjectCreated:*",
              "rules": [
                {
                  "prefix": "uploads"
                },
                {
                  "suffix": ".jpg"
                }
              ]
            }
          }
        ],
        "name": "serverless-service-new-dev-executeStepFunction",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ExecuteStepFunctionLambdaVersionjOvTKjhziSaqmKptqaHZ8RWcBcY3HDdVhqDHvozQeHI"
      },
      "thumbnails": {
        "handler": "handler.thumbnails",
        "events": [
          {
            "s3": {
              "bucket": "chiru-serverless-service-learning-008",
              "event": "s3:ObjectCreated:*",
              "rules": [
                {
                  "prefix": "resized-uploads"
                },
                {
                  "suffix": ".jpg"
                }
              ]
            }
          }
        ],
        "name": "serverless-service-new-dev-thumbnails",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "ThumbnailsLambdaVersionSb8zj7F5VE5O06sMajn1CULRyDsTvcTuRD26K7Ho6U"
      },
      "saveImageMetaData": {
        "handler": "handler.saveImageMetaData",
        "events": [],
        "name": "serverless-service-new-dev-saveImageMetaData",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SaveImageMetaDataLambdaVersionZPfjafnIGlvhSQtPjc1oi4ifw1mFY0a8ky7czJV9s"
      },
      "squareImage": {
        "handler": "handler.squareImage",
        "events": [],
        "name": "serverless-service-new-dev-squareImage",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SquareImageLambdaVersionHjJLiJKqQyc14fd9Agza9ptRjyF6U8HOMk3BdqpRw"
      },
      "getImageMetaData": {
        "handler": "handler.getImageMetaData",
        "events": [
          {
            "http": {
              "path": "image/{imageId}",
              "method": "get",
              "authorizer": {
                "name": "authorize",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AuthorizeLambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-service-new-dev-getImageMetaData",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetImageMetaDataLambdaVersionDZAE0cKxGy86Az8C9ZnwrNTZeSOa6UKLp1KRDH0qIY"
      },
      "generateToken": {
        "handler": "authorizationHandler.generateToken",
        "events": [
          {
            "http": {
              "path": "register",
              "method": "post",
              "private": true,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-service-new-dev-generateToken",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GenerateTokenLambdaVersionpM6f3ml9YGN5zem3GLh1KByvWRG5BegAryUrowywU"
      },
      "authorize": {
        "handler": "authorizationHandler.authorize",
        "events": [],
        "name": "serverless-service-new-dev-authorize",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "AuthorizeLambdaVersion63fuK7jDqidrT0VcjxatFRFYhygb4FKQo6jIXsGkc1c"
      }
    },
    "resources": {
      "Resources": {
        "ImageTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "ImageId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "ImageId",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "images-metadata"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "frameworkVersion": "2",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "stepFunctions": {
        "stateMachines": {
          "imageProcessingMachine": {
            "definition": {
              "Comment": "image processing state machine",
              "StartAt": "Parallel",
              "States": {
                "Parallel": {
                  "Type": "Parallel",
                  "Next": "FinalState",
                  "Branches": [
                    {
                      "StartAt": "ResizeImage",
                      "States": {
                        "ResizeImage": {
                          "Type": "Task",
                          "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-service-new-dev-resizeImage",
                          "End": true
                        }
                      }
                    },
                    {
                      "StartAt": "SaveImageMetaData",
                      "States": {
                        "SaveImageMetaData": {
                          "Type": "Task",
                          "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-service-new-dev-saveImageMetaData",
                          "End": true
                        }
                      }
                    },
                    {
                      "StartAt": "SquareImage",
                      "States": {
                        "SquareImage": {
                          "Type": "Task",
                          "Resource": "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:serverless-service-new-dev-squareImage",
                          "End": true
                        }
                      }
                    }
                  ]
                },
                "FinalState": {
                  "Type": "Pass",
                  "End": true
                }
              }
            }
          }
        }
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "stepFunctions": {
      "stateMachines": {
        "$ref": "$[\"service\"][\"initialServerlessConfig\"][\"stepFunctions\"][\"stateMachines\"]"
      },
      "activities": []
    },
    "artifact": "C:\\Users\\DA\\Documents\\AWS Learning\\Chiru Account\\AWS Automation\\AWS Serverless\\Serverless-Service\\.serverless\\serverless-service-new.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-service-new/dev/1635678113003-2021-10-31T11:01:53.003Z",
    "artifact": "serverless-service-new.zip"
  }
}