---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Network ACLs for Microservices'

Parameters:
  NetworkStack:
    Description: Network Stack where we want to apply Acl 
    Type: String



Resources:

  #Create a ACL to control traffic at Subnet Level
  #This is regardless of what instance or security are in use within Subnet
  DmzAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: 
        Fn::ImportValue:
          !Sub ${NetworkStack}-VpcId 
      Tags:
        - Key: Name
          Value: Internet traffic
        - Key: Scope
          Value: Public

  #NACLs should be explictly Associated to Subnets
  DmzAclAssociationA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DmzAcl
      SubnetId: 
        Fn::ImportValue:
          !Sub ${NetworkStack}-DMZSubnetAId

  DmzAclAssociationB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DmzAcl
      SubnetId: 
        Fn::ImportValue:
          !Sub ${NetworkStack}-DMZSubnetBId

  DmzAclAssociationC:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref DmzAcl
      SubnetId: 
        Fn::ImportValue:
          !Sub ${NetworkStack}-DMZSubnetCId

  #Allow InBound UDP Port 123 for NTP

  DmzAclEntryIngressNtp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 17                  #17 for UDP
      RuleAction: allow
      RuleNumber: 100
      CidrBlock: 0.0.0.0/0
      PortRange:
        From:
          123
        To:
          123
  #Allow OUTbound UDP Port 123 for NTP
  DmzAclEntryEgressNtp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 17                  #17 for UDP
      RuleAction: allow
      RuleNumber: 100
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From:
          123
        To:
          123


  #Additional Details for Change Set
  #Allow INGRESS HTTP


  DmzAclEntryIngressHttp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                        #6 for TCP
      RuleAction: allow
      RuleNumber: 110
      CidrBlock: 0.0.0.0/0
      PortRange:
        From:
          80
        To:
          80


  # Allow INGRESS HTTPS
  DmzAclEntryIngressHttps:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                       #6 for TCP
      RuleNumber: 111
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From:
          443
        To:
          443


  #Allow EGRESS HTTP
  DmzAclEntryEgressHttp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                        #6 for TCP
      RuleAction: allow
      RuleNumber: 110
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From:
          80
        To:
          80


  # Allow EGRESS HTTPS
  DmzAclEntryEgressHttps:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                       #6 for TCP
      RuleNumber: 111
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From:
          443
        To:
          443

  #Allow Ingress Ephemeral TCP ports since those will be reponse for outgoing HTTPS Request
  DmzAclEntryIngressEmphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                                  #6 for TCP
      RuleNumber: 120
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From:
          1024
        To:
          65535
  
  #Allow Egress Ephemeral TCP ports since those will be reponse for HTTPS Request
  DmzAclEntryEgressEmphemeral:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref DmzAcl
      Protocol: 6                                  #6 for TCP
      RuleNumber: 120
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      Egress: true
      PortRange:
        From:
          1024
        To:
          65535




  

  