AWSTemplateFormatVersion: '2010-09-09'
Description: 'Microservices for VPC And Subnets'

Parameters:
  VpcCidrPrefix:
    Description: "VPC CIDR Prefix"
    Type: "String"
    AllowedPattern: "\\d{1,3}\\.\\d{1,3}"

Resources:
  Vpc:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".0.0/21"]]
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
        - Key: Name
          Value:  !Ref "AWS::StackName"

  SubnetDmzA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".0.0/24"]]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: DMZ A
        - Key: Scope
          Value: Public
      VpcId: !Ref Vpc


  SubnetDmzB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".1.0/24"]]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: DMZ B
        - Key: Scope
          Value: Public
      VpcId: !Ref Vpc


  SubnetDmzC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".2.0/24"]]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: DMZ C
        - Key: Scope
          Value: Public
      VpcId: !Ref Vpc


  SubnetNodesA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".3.0/24"]]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices Nodes A
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: Nodes
      VpcId: !Ref Vpc


  SubnetNodesB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".4.0/24"]]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices Nodes B
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: Nodes
      VpcId: !Ref Vpc

  SubnetNodesC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Join [ "",[!Ref VpcCidrPrefix, ".5.0/24"]] #5.1 - 5.255
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices Nodes C
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: Nodes
      VpcId: !Ref Vpc

  # Create three /28 Subnets to hold RDS
  SubnetDbA:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: !Join [ "", [!Ref VpcCidrPrefix, ".6.0/28"] ] # 6.0-6.15  11 Usuable IPs (Aws Reserves 5 IP's)
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices DB A
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: DB
      VpcId: !Ref Vpc

  SubnetDbB:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: !Join [ "", [!Ref VpcCidrPrefix, ".6.16/28"] ] # 6.16-6.32 11 Usuable IPs (Aws Reserves 5 IP's)
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices DB B
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: DB
      VpcId: !Ref Vpc

  SubnetDbC:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      CidrBlock: !Join [ "", [!Ref VpcCidrPrefix, ".6.32/28"] ] # 6.32-6.47 11 Usuable IPs (Aws Reserves 5 IP's)
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Microservices DB C
        - Key: Scope
          Value: Private
        - Key: Purpose
          Value: DB
      VpcId: !Ref Vpc


Outputs:
  VpcId:
    Description : "VPC CI"
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::StackName}-VpcId

  
  VpcCidr:
    Description: "VPC Cidr"
    Value: !GetAtt Vpc.CidrBlock
    Export:
       Name: !Sub ${AWS::StackName}-VpcCidrBlock

  
  DMZSubnetAId:
    Description: "DMZ A Subnet ID"
    Value: !Ref SubnetDmzA
    Export:
      Name: !Sub ${AWS::StackName}-DMZSubnetAId


  DMZSubnetBId:
    Description: "DMZ B Subnet ID"
    Value: !Ref SubnetDmzB
    Export:
      Name: !Sub ${AWS::StackName}-DMZSubnetBId

  DMZSubnetCId:
    Description: "DMZ C Subnet ID"
    Value: !Ref SubnetDmzC
    Export:
      Name: !Sub ${AWS::StackName}-DMZSubnetCId


  #Used later for ECS Cluster Auto Scaling Group
  NodesAId:
    Description: "Nodes A Subnet ID"
    Value: !Ref SubnetNodesA
    Export:
      Name: !Sub ${AWS::StackName}-NodesAId


  NodesBId:
    Description: "Nodes B Subnet ID"
    Value: !Ref SubnetNodesB
    Export:
      Name: !Sub ${AWS::StackName}-NodesBId

  NodesCId:
    Description: "Nodes C Subnet ID"
    Value: !Ref SubnetNodesC
    Export:
      Name: !Sub ${AWS::StackName}-NodesCId


  #Used later for RDS Instances

  DbAId:
    Description: "Db A Subnet ID"
    Value: !Ref SubnetDbA
    Export:
      Name: !Sub ${AWS::StackName}-DbAId


  DbBId:
    Description: "Db B Subnet ID"
    Value: !Ref SubnetDbB
    Export:
      Name: !Sub ${AWS::StackName}-DbBId

  DbCId:
    Description: "Db C Subnet ID"
    Value: !Ref SubnetDbC
    Export:
      Name: !Sub ${AWS::StackName}-DbCId







        
  


 